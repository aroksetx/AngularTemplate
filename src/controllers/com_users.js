// Generated by CoffeeScript 1.8.0

/**
@author
@description This component use for user managment. User registrtate, enter and etc..
@name com_usersController


@Error codes:
 004 - MISSING_ELEMENT_ERROR :  $title : {$value}
 003 - MISSING_PARAMETERS_ERROR
 210 - Parameter {$parameter} is invalid. {$validationMessage}
 002 - MYSQL_ERROR
 016 - EXISTING_ELEMENT_ERROR
 015 - VALIDATION_ERROR: Token {$token} is not active!
 015 - VALIDATION_ERROR: User with ID: {$userId} is not active!
 015 - VALIDATION_ERROR: User with ID: {$userId} isn't 'not activated'!
 015 - VALIDATION_ERROR: Editing user cannot create/update child user!
 105 - The message was not sent
 666 - ACCESS_DENIED!
 ======================

@MethodDescription
 register
 checkToken
 resendToken
 login
 resendUserPassword
 changeUserPassword

 createChildUser
 updateChildUser
 changeChildUserPassword
 connectChildUserToArtists
 activateChildUser
 deactivateChildUser
 deleteChildUser
 getChildUser
 ======================
 */


/* @ngInject */

(function() {
  module.exports = function($scope, $restManager, $constantManager) {

    /**
     * @description - This function use for new user registration.
     * @params - Function take JSON object that contains data{{username|password}}.
     * */
    $scope.register = function (data) {

      //GENERATE REQUEST USING $RESTMANAGER SERVICE
      $restManager.generateRequest($constantManager.apiUrl).post({

          //SET COMPONENT AND ACTION
          component: "com_users", action: "register",

          //SET DATA PARAMETRS
          data: {
            "password":"20072007",
            "email":"test103@fabula.bg"
          }
        },

        //GET SUCCESS RESPONCE DATA
        function success(response) {
          console.info(response)
        },

        //GET UNSACCESS RESPONCE DATA
        function (error) {
          console.warn(error);
        });
    };

    /**
     * @description - This function check user token. If token correct user set status registrated.
     * @params - none.
     * */
    $scope.checkToken = function () {

      //GENERATE REQUEST USING $RESTMANAGER SERVICE
      $restManager.generateRequest($constantManager.apiUrl).post({

          //SET COMPONENT AND ACTION
          component: "com_users", action: "checkToken",

          //SET DATA PARAMETRS
          data: {
            "token":"7e3b88a3eb3f6a67ee3173e4558b9d78"
          }
        },

        //GET SUCCESS RESPONCE DATA
        function success(response) {
          console.info(response)
        },

        //GET UNSACCESS RESPONCE DATA
        function (error) {
          console.warn(error);
        });
    };

    /**
     * @description - This function use for request that resend token for user.
     * @params - Function take data{{userEmail}} for token resend.
     * */
    $scope.resendToken = function (email) {

      //GENERATE REQUEST USING $RESTMANAGER SERVICE
      $restManager.generateRequest($constantManager.apiUrl).post({

          //SET COMPONENT AND ACTION
          component: "com_users", action: "resendToken",

          //SET DATA PARAMETRS
          data: {
            "email": "lola44@gmail.com"
          }
        },

        //GET SUCCESS RESPONCE DATA
        function success(response) {
          console.info(response)
        },

        //GET UNSACCESS RESPONCE DATA
        function (error) {
          console.warn(error);
        });
    };

    /**
     * @description - Function use for user login.
     * @params - Function take JSON object that contains data{{username|password}}.
     * */
    $scope.login = function (data) {

      //GENERATE REQUEST USING $RESTMANAGER SERVICE
      $restManager.generateRequest($constantManager.apiUrl).post({

          //SET COMPONENT AND ACTION
          component: "com_users", action: "login",

          //SET DATA PARAMETRS
          data: {
            "username":"test103",  // MANDATORY - It's username or e-mai
            "password":"20072007" // MANDATORY
          }
        },

        //GET SUCCESS RESPONCE DATA
        function success(response) {
          console.info(response)
        },

        //GET UNSACCESS RESPONCE DATA
        function (error) {
          console.warn(error);
        });
    };

    /**
     * @description - Function use if user dont remember his password.
     * @params - Function take user email.
     * */
    $scope.resendUserPassword = function (email) {

      //GENERATE REQUEST USING $RESTMANAGER SERVICE
      $restManager.generateRequest($constantManager.apiUrl).post({

          //SET COMPONENT AND ACTION
          component: "com_users", action: "resendUserPassword",

          //SET DATA PARAMETRS
          data: {
            "email":"koko171@alala.com",      // MANDATORY
          }
        },

        //GET SUCCESS RESPONCE DATA
        function success(response) {
          console.info(response)
        },

        //GET UNSACCESS RESPONCE DATA
        function (error) {
          console.warn(error);
        });
    };

    /**
     * @description - Function use for user password change.
     * @params - Take user data{{oldPassword|newPassword}}
     * */
    $scope.changeUserPassword = function (data) {

      //GENERATE REQUEST USING $RESTMANAGER SERVICE
      $restManager.generateRequest($constantManager.apiUrl).post({

          //SET COMPONENT AND ACTION
          component: "com_users", action: "changeUserPassword",

          //SET DATA PARAMETRS
          data: {
            "oldPassword": "20082008",  // MANDATORY
            "password": "20072007"      // MANDATORY
          }
        },

        //GET SUCCESS RESPONCE DATA
        function success(response) {
          console.info(response)
        },

        //GET UNSACCESS RESPONCE DATA
        function (error) {
          console.warn(error);
        });
    };

    /**
     * @description  - Function creat user chield.
     * @params - Take JSON data{{firstName|lastName|email|phone|born|countryId|city|zipCode|notes|hearAboutUs}}.
     * */
    $scope.createChildUser = function () {

      //GENERATE REQUEST USING $RESTMANAGER SERVICE
      $restManager.generateRequest($constantManager.apiUrl).post({

          //SET COMPONENT AND ACTION
          component: "com_users", action: "createChildUser",

          //SET DATA PARAMETRS
          data: {
            "firstName":"Test USER",                  // MANDATORY
            "lastName":"Last name 34",             // MANDATORY
            "email":"koko171@alala.com",      // MANDATORY
            "phone":"12232123",
            "born":"1970-09-09",
            "countryId":"15",
            "city":" Dnepropetrovsk",
            "address":" bogoridi 17 ",
            "zipCode":"dddddddddd",
            "notes":"sdf sdf sdf",
            "hearAboutUs":"asd asd sdf sdf sff "
          }
        },

        //GET SUCCESS RESPONCE DATA
        function success(response) {
          console.info(response)
        },

        //GET UNSACCESS RESPONCE DATA
        function (error) {
          console.warn(error);
        });
    };

    /**
     * @description - Function update userChield params.
     * @params - Take JSON data{{userId|changePssword|firstName|lastName|email|phone|born
     * |countryId|city|address|zipCode|notes|hearAboutUs}}.
     * */
    $scope.updateChildUser = function () {

      //GENERATE REQUEST USING $RESTMANAGER SERVICE
      $restManager.generateRequest($constantManager.apiUrl).post({

          //SET COMPONENT AND ACTION
          component: "com_users", action: "updateChildUser",

          //SET DATA PARAMETRS
          data: {
            "userId":"79",                         // MANDATORY
            "changePassword":"1",       // MANDATORY        VALUES =0 OR 1
            "firstName":"Test USER",
            "lastName":"Last name 34",
            "email":"koko171@alala.com",
            "phone":"12232123",
            "born":"1970-09-09",
            "countryId":"15",
            "city":" Dnepropetrovsk    ",
            "address":" bogoridi 17 ",
            "zipCode":"dddddddddd",
            "notes":"sdf sdf sdf",
            "hearAboutUs":"asd asd sdf sdf sff "
          }
        },

        //GET SUCCESS RESPONCE DATA
        function success(response) {
          console.info(response)
        },

        //GET UNSACCESS RESPONCE DATA
        function (error) {
          console.warn(error);
        });
    };

    /**
     * @description - Function change chield user password.
     * @params - Funion take chie user id.
     * */
    $scope.changeChildUserPassword = function (userId) {


      //GENERATE REQUEST USING $RESTMANAGER SERVICE
      $restManager.generateRequest($constantManager.apiUrl).post({

        //SET COMPONENT AND ACTION
        component: "com_users", action: "changeChildUserPassword",

        //SET DATA PARAMETRS
        data: {
          "userId": userId  // MANDATORY
        }
      },

        //GET SUCCESS RESPONCE DATA
        function success(response) {
          console.info(response)
        },

        //GET UNSACCESS RESPONCE DATA
        function (error) {
          console.warn(error);
        });
    };

    /**
     * @description - Function connect chieldUser to artist.
     * @params - Function take JSON data{userId|artistIds[array]}
     * */
    $scope.connectChildUserToArtists = function (data) {


      //GENERATE REQUEST USING $RESTMANAGER SERVICE
      $restManager.generateRequest($constantManager.apiUrl).post({

        //SET COMPONENT AND ACTION
        component: "com_users", action: "connectChildUserToArtists",

        //SET DATA PARAMETRS
        data: {
          "userId":data.userId,                         // MANDATORY
          "artistIds":data.artistIds                     // MANDATORY
        }
      },

        //GET SUCCESS RESPONCE DATA
        function success(response) {
          console.info(response)
        },

        //GET UNSACCESS RESPONCE DATA
        function (error) {
          console.warn(error);
        });
    };

    /**
     * @description - Function for chield user activation.
     * @params - Function take JSON data{userId|artistIds[array]}
     * */
    $scope.activateChildUser = function (data) {


      //GENERATE REQUEST USING $RESTMANAGER SERVICE
      $restManager.generateRequest($constantManager.apiUrl).post({

        //SET COMPONENT AND ACTION
        component: "com_users", action: "activateChildUser",

        //SET DATA PARAMETRS
        data: {
          "userId":data.userId,                         // MANDATORY
          "artistIds":data.artistIds
        }
      },
      //GET SUCCESS RESPONCE DATA
      function success(response) {
        console.info(response)
      },

      //GET UNSACCESS RESPONCE DATA
      function (error) {
        console.warn(error);
      });
    };

    /**
     * @description - Function use for user delete.
     * @params - Function take userId.
     * */
    $scope.deleteChildUser = function (userId) {

      //GENERATE REQUEST USING $RESTMANAGER SERVICE
      $restManager.generateRequest($constantManager.apiUrl).post({

        //SET COMPONENT AND ACTION
        component: "com_users", action: "deleteChildUser",

        //SET DATA PARAMETRS
        data: {
          "userId": userId                        // MANDATORY
        }
      },
        //GET SUCCESS RESPONCE DATA
        function success(response) {
          console.info(response)
        },

        //GET UNSACCESS RESPONCE DATA
        function (error) {
          console.warn(error);
        });
    };

    /**
     * @description - Function use for chield userd delete.
     * @params - Function take userId.
     * */
    $scope.deactivateChildUser = function(userId){

      //GENERATE REQUEST USING $RESTMANAGER SERVICE
      $restManager.generateRequest($constantManager.apiUrl).post({

        //SET COMPONENT AND ACTION
        component: "com_users", action: "deactivateChildUser",

        //SET DATA PARAMETRS
        data: {
          "userId": userId                      // MANDATORY
        }
      },
        //GET SUCCESS RESPONCE DATA
        function success(response) {
          console.info(response)
        },

        //GET UNSACCESS RESPONCE DATA
        function (error) {
          console.warn(error);
        });
    };

    /**
     * @description - Function get information about user.
     * @params - Function take userId.
     * */
    $scope.getChildUser = function (userId) {

      //GENERATE REQUEST USING $RESTMANAGER SERVICE
      $restManager.generateRequest($constantManager.apiUrl).post({

        //SET COMPONENT AND ACTION
        component: "com_users", action: "getChildUser",

        //SET DATA PARAMETRS
        data: {
          "userId": userId                         // MANDATORY
        }
      },
        //GET SUCCESS RESPONCE DATA
        function success(response) {
          console.info(response)
        },

        //GET UNSACCESS RESPONCE DATA
        function (error) {
          console.warn(error);
        });
    };

  };

}).call(this);
