// Generated by CoffeeScript 1.8.0

/**
 @author
 @description
 @name com_testimonialsController

 @Possible actions:
 createTestimonial
 listTestimonials

 @Error codes:
 004 - MISSING_ELEMENT_ERROR: $title : {$value}
 003 - MISSING_PARAMETERS_ERROR : {$parameters}
 002 - MYSQL_ERROR
 666 - ACCESS_DENIED!

 */


/* @ngInject */

(function () {
  module.exports = function ($scope, $constantManager, $restManager) {

    /**
     * @description - Create new testimonial. Return JSON The new testimonial data or an error
     * Check for: missing parameters -  "name", "title", "testimonial"
     * @params -
     * */
    $scope.createTestimonial = function () {

      //GENERATE REQUEST USING $RESTMANAGER SERVICE
      $restManager.generateRequest($constantManager.apiUrl).post({

          //SET COMPONENT AND ACTION
          component: "com_testimonials", action: "createTestimonial",

          //SET DATA PARAMETRS
          data: {
            "name": "user name1 name2 name3",                 // MANDATORY
            "title": "testimonial title 1",                                      // MANDATORY
            "testimonial": "ddddddddddd ddddddddddd tttttttttttttttttttt bbbbbbbbbbbbbbbbb"                // MANDATORY
          }
        },

        //GET SUCCESS RESPONCE DATA
        function success(response) {
          console.info(response)
        },

        //GET UNSACCESS RESPONCE DATA
        function (error) {
          console.warn(error);
        });
    };

    /**
     * @description - Lists all testimonials by keyWords. Gets only testimonials with status>0 /approved and favorite/.
     * Cannot search by column testimonial, cannot order by column testimonial. If there are not data -
     * return all testimonials from default offset and default limit. Return JSON Object with array of testimonials.
     * @return - Return JSON success message or an error
     * Check for:
     * if session user  is super admin
     * if there is any Impersonation
     * @params -
     * */
    $scope.listTestimonials = function () {

      //GENERATE REQUEST USING $RESTMANAGER SERVICE
      $restManager.generateRequest($constantManager.apiUrl).post({

          //SET COMPONENT AND ACTION
          component: "com_testimonials", action: "listTestimonials",

/**
 * POST parameters:

 All integer and date columns are searched with =. Date columns are searched with LIKE%% when date column contains only year, month and day, without hour, minutes and seconds. All text columns are searched with LIKE '%keyWord%'

 - Without keywords will retrieve standard paginated list
 data: {
"condition":"AND",
"offset":0,
"limit": 100,
"orderColumn": "id" ,
"orderType": "asc"
}
 - Standard search - this kind of search will search in given columns
 data: {
   "offset": "0",              // default=0
    "limit": "20",          // default=DEFAULT_LIMIT /100/
    "orderType": "ASC",    //       ASC / DESC        default=ASC
    "orderColumn": "id",  // "id","userIP", "name", "title",  "dateIn","lastUpdate", "updatedBy", "status" //
    "condition": "AND",        //        AND / OR
    "keyWords": {      // "id","userIP", "name", "title",  "dateIn","lastUpdate", "updatedBy", "status" //
       "id":"",
       "userIP":"",
       "name":"",
       "title":"",
       "dateIn":"",
       "lastUpdate":"",
       "updatedBy":"",
       "status":""
    }

}
 * **/

          //SET DATA PARAMETRS
          data: {
            "offset": "0",              // default=0
            "limit": "20",          // default=DEFAULT_LIMIT /100/
            "orderType": "ASC",    //       ASC / DESC        default=ASC
            "orderColumn": "id",  // "id","userIP", "name", "title",  "dateIn","lastUpdate", "updatedBy", "status" //
            "condition": "AND",        //        AND / OR
            "keyWords": {      // "id","userIP", "name", "title",  "dateIn","lastUpdate", "updatedBy", "status" //
              "id":"",
              "userIP":"",
              "name":"",
              "title":"",
              "dateIn":"",
              "lastUpdate":"",
              "updatedBy":"",
              "status":""
            }
          }
        },

        //GET SUCCESS RESPONCE DATA
        function success(response) {
          console.info(response)
        },

        //GET UNSACCESS RESPONCE DATA
        function (error) {
          console.warn(error);
        });
    };

  };

}).call(this);
